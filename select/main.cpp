#include <iostream>
#include <sys/time.h>
#include <sys/types.h>
#include <unistd.h>

int main() {
    
    // 파일의 그룹을 만들고 관리하여, 이 중 어떤 파일에 데이터가 입력 혹은 출력되었는지는 확인하는 함수이다.
    // 첫 번째 인수 : 그룹이 포함하는 파일의 개수
    // 두, 세, 네 번째 인수 : fd_set은 '비트 필드'로 파일에 데이터 변화가 있어면 해당 파일에 대응되는 필드에 1을 설정한다.
    // readfds는 읽을 데이터가 있는지, writefds는 쓸 데이터가 있는지를 검사하기 위해 사용하는 비트 테이블이다.
    // 
    // fd_set은 1024비트(128바이트)의 크기를 가진다. 즉 최대 1024개의 파일을 관리할 수 있다는 것.
    // 또한 파일 지정번호에 대응되는 필드는 이미 정해져 있기에 큐와 헷갈려서는 안된다.
    // 다섯 번째 인수 : select함수는 관리하는 파일 그룹의 데이터 입출력 변화가 있을 때까지 기다린다. 해당 값으로 기다릴 제한 시간을 지정할 수 있다.
    // NULL이면 데이터 변화가 있을 때 까지 무한정 기다린다.
    select();

    // select함수의 핵심은 fd_set 관리에 있다. fd_set 관리는 결국 비트연산인데 직접 제어하기는 어렵기에 몇 가지 매크로 함수가 제공된다.
    // FD_ZERO -> fd_set을 초기화한다. 모든 플래그 값을 0으로 만든다.
    // FD_SET -> 파일을 fd_set에 추가한다. select함수는 이 파일에 변화가 생기면 플래그를 1로 설정한다.
    // FD_ISSET -> fd_set에 포함된 파일 중 데이터 변화가 있는지를 확인한다.
    // FD_CLR -> fd_set에서 특정 파일을 제거한다.
    
    return 0;
}